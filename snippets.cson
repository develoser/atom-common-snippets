# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson

'.source.js':
  'jasmine.it':
    'prefix': 'it'
    'body': 'it(\'$1\', function ($2) {$3});'
  'jasmine.beforeAll':
    'prefix': 'bfa'
    'body': 'beforeAll(function ($1) {$2});'
  'jasmine.beforeEach':
    'prefix': 'bfe'
    'body': 'beforeEach(function ($1) {$2});'
  'jasmine.afterAll':
    'prefix': 'afa'
    'body': 'afterAll(function ($1) {$2});'
  'jasmine.afterEach':
    'prefix': 'afe'
    'body': 'afterEach(function ($1) {$2});'
  'jasmine.expect':
    'prefix': 'exp'
    'body': 'expect($1).to$2Be$3($4);'
  'jasmine.describe':
    'prefix': 'desc'
    'body': 'describe(\'$1\', function ($2) {$3});'
  'module.new':
    'prefix': 'module.new'
    'body': """
    (function () {

        'use strict';

        $1

        module.exports = $1

    })();
    """
  'module.singleton.new':
    'prefix': 'module.singleton.new'
    'body': """
    (function () {

        'use strict';

        module.exports = {
            $1
        };

    })();
    """
  'module.class.new':
    'prefix': 'module.class.new'
    'body': """
    (function () {

        'use strict';

        class $1 {

        }

        module.exports = $1;

    })();
    """
  'module.component.new':
    'prefix': 'module.component.new'
    'body': """
    (function() {

        'use strict';

        let locator = require('./$1.locator'),
            BaseComponent = require('../../../../common/components/base.component');

        /**
         * @classdesc $3
         * @extends Component
         */
        class $2 extends BaseComponent {

            constructor(options) {
                super(locator, options);
            }

        }

        module.exports = $2;

    })();
    """
  'module.page-object.new':
    'prefix': 'module.page-object.new'
    'body': """
    (function() {

        'use strict';

        let BasePageObject = require('/pages/base.po');

        class $2 extends BasePageObject {

        }

        module.exports = $2;

    })();
    """
  'module.locator.new':
    'prefix': 'module.locator.new'
    'body': """
    (function() {

        'use strict';

        const ELEMENT = '$1';

        module.exports = {
            'ELEMENT': ELEMENT
        };

    })();
    """
  'this.el.element':
    'prefix': 'this.el.element'
    'body': """
    return this.$el.element(by.css(locator.$1));
    """
  'pageobject.getcomp':
    'prefix': 'pageobject.getcomp'
    'body': """
    DashboardPageObject.getComponent('$1');
    """
